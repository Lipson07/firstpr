from fastapi import FastAPI,HTTPException,Response,Depends
from authx import AuthX,AuthXConfig
from pydantic import BaseModel
import uvicorn
app=FastAPI( )
config=AuthXConfig()
config.JWT_SECRET_KEY="SECRET_KEY"
config.JWT_ACCESS_COOKIE_NAME="access_token"
config.JWT_TOKEN_LOCATION=["cookies"]
security=AuthX(config=config)
class User(BaseModel):
    name:str
    password:str
@app.post("/login")
async def login(credentials:User,response: Response): 
    if credentials.name=="aleks" and credentials.password=="123":
        token=security.create_access_token(uid="1232")
        response.set_cookie(config.JWT_ACCESS_COOKIE_NAME,token)
        return{"access_token":token}
    raise HTTPException(status_code=401,detail="Invalid credentials")
@app.get("/protected",dependencies=[Depends(security.access_token_required)])
async def protected():
    return {"message": "Hello World"}
if __name__== "__main__":
    uvicorn.run(app="main:app",reload=True)